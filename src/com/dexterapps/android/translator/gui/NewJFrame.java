/*
Copyright 2014 Pranay Airan

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
 */
package com.dexterapps.android.translator.gui;

import com.dexterapps.android.translator.SupportedLanguage;
import com.dexterapps.android.translator.TranslateTextForAndroid;
import com.dexterapps.android.translator.TranslateTextForIOS;
import java.awt.Color;
import java.util.prefs.Preferences;
import javax.swing.JEditorPane;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Pranay Airan
 * http://www.dexterapps.in/
 * pranay.airan@iiitb.net
 * 
 * GUI For Helping in Translation
 * 
 */

public class NewJFrame extends javax.swing.JFrame {

    
     MessageConsole mc;
     private Preferences prefs;
     
     String ClientIDPref = "ClientIDPref";
     String  ClientSecretPref= "ClientSecretPref";
     boolean isIOS = false;
     
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
         mc = new MessageConsole(textConsole);
         mc.redirectOut();
         mc.redirectErr(Color.RED, null);
         mc.setMessageLines(100);
         mc.redirectOut(null, System.out);
           prefs = Preferences.userRoot().node(this.getClass().getName());
           //System.out.print(prefs.get(ClientIDPref, ""));
        clientID.setText(prefs.get(ClientIDPref, ""));
        clientSecret.setText(prefs.get(ClientSecretPref, ""));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane4 = new javax.swing.JScrollPane();
        clientSecret1 = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        clientSecret2 = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        clientSecret4 = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientID = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientSecret = new javax.swing.JTextPane();
        ChooseBaseFile = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        BaseFilePath = new javax.swing.JTextPane();
        jScrollPane8 = new javax.swing.JScrollPane();
        OuputFolderPath = new javax.swing.JTextPane();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        BaseLanguage = new javax.swing.JComboBox();
        console = new javax.swing.JScrollPane();
        textConsole = new javax.swing.JTextPane();
        jLabel6 = new javax.swing.JLabel();
        Platform = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        jLabel2.setText("Azure Client Id");

        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane4.setViewportView(clientSecret1);

        jScrollPane5.setViewportView(clientSecret2);

        clientSecret4.setEnabled(false);
        jScrollPane7.setViewportView(clientSecret4);

        jButton3.setText("Choose String.xml");

        jLabel4.setText("Azure Client Id");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DexterApps Android iOS Resource Translator");

        jLabel1.setText("Azure Client Id");

        jButton1.setText("Translate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        clientID.setToolTipText("Enter Your Azure App Client ID");
        jScrollPane1.setViewportView(clientID);

        jLabel3.setText("Azure Client Secret");

        clientSecret.setToolTipText("Your Azure App Secret");
        jScrollPane3.setViewportView(clientSecret);

        ChooseBaseFile.setText("Choose String.xml");
        ChooseBaseFile.setToolTipText("Path to Your Android String.xml");
        ChooseBaseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseBaseFileActionPerformed(evt);
            }
        });

        BaseFilePath.setEnabled(false);
        jScrollPane6.setViewportView(BaseFilePath);

        OuputFolderPath.setEnabled(false);
        jScrollPane8.setViewportView(OuputFolderPath);

        jButton4.setText("Ouput Folder");
        jButton4.setToolTipText("Output Folder Location where you want to save the generated files");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setText("Base Language");

        BaseLanguage.setModel((new javax.swing.DefaultComboBoxModel(SupportedLanguage.supportedLanguage)));

        textConsole.setEditable(false);
        textConsole.setToolTipText("The output messages will display here");
        console.setViewportView(textConsole);

        jLabel6.setText("Choose Platform");

        Platform.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Android", "iOS" }));
        Platform.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PlatformItemStateChanged(evt);
            }
        });

        jMenu1.setText("Help");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Get Client ID Secret");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(console, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BaseLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                                    .addComponent(jScrollPane8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ChooseBaseFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(39, 39, 39)
                        .addComponent(Platform, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Platform, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ChooseBaseFile)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(BaseLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(console, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        String azureClientID = clientID.getText() ;
        String azureClientSecret = clientSecret.getText() ;
        String sourceFile = BaseFilePath.getText();
        String destinationPath = OuputFolderPath.getText();
        
        if(azureClientID.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Client ID is Required");
        }
        else if(azureClientSecret.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Client Secret is Required");
        }
        else if(sourceFile.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Source File is Required");
        }
        else if(destinationPath.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Destination Folder is Required");
        }
        else
        {
            prefs.put(ClientIDPref,azureClientID);
            prefs.put(ClientSecretPref,azureClientSecret);            
            String baseLanguageCode = SupportedLanguage.languageCodeMap.get(BaseLanguage.getSelectedItem().toString());
            if(!isIOS)
            {
                
                TranslateTextForAndroid translateText = new TranslateTextForAndroid();
                translateText.translateText(azureClientID, azureClientSecret, sourceFile, destinationPath, baseLanguageCode);
            }
            else
            {
                TranslateTextForIOS translateText = new TranslateTextForIOS();
                translateText.translateIOSText(azureClientID, azureClientSecret, sourceFile, destinationPath, baseLanguageCode);
            }
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       
            JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Choose Ouput Folder");
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            
                OuputFolderPath.setText(chooser.getSelectedFile().getAbsolutePath());
            
            } else {
            System.out.println("No Output Directory Selected");
            }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ChooseBaseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseBaseFileActionPerformed
       
         JFileChooser chooser = new JFileChooser();
            chooser.setCurrentDirectory(new java.io.File("."));
            chooser.setDialogTitle("Choose Ouput Folder");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            if(isIOS)
            {
                     FileFilter filter = new FileNameExtensionFilter("String Files", "strings");
                chooser.setFileFilter(filter);
            }
            else
            {
                FileFilter filter = new FileNameExtensionFilter("XML Files", "xml");
                chooser.setFileFilter(filter);
            }

            if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            
                BaseFilePath.setText(chooser.getSelectedFile().getAbsolutePath());
            
            } else {
            System.out.println("No Output Directory Selected");
            }
       
    }//GEN-LAST:event_ChooseBaseFileActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
      
          
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       
    final JEditorPane editor = new JEditorPane();
    editor.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
    
    editor.setText("Register An Application at Azure MarketPlace <a href='#'>https://datamarket.azure.com/developer/applications/register </a> <br/><br/>"
            + "Add Microsoft Translate Service to your Azure App <a href='#'>https://datamarket.azure.com/dataset/bing/microsofttranslator </a><br/><br/> Copy Paste Above URL in your Browser");
   

   
    editor.setEditable(true);
    editor.setBackground(jLabel1.getBackground());
        // JOptionPane.showMessageDialog(this, "<html> Click Here </a><br/>"
          //       + "Add Microsoft Translate Service to your Azure App <a href='https://datamarket.azure.com/dataset/bing/microsofttranslator'> Click Here </a><br/></html>");
    
    JOptionPane.showMessageDialog(this,editor);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      
         final JEditorPane editor = new JEditorPane();
    editor.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
    
    editor.setText("Created By Pranay Airan <a href='#'>http://goo.gl/CkWHdT</a> <br/><br/>"
            + "App Powered By Microsoft Translator Java API by  Jonathan Griggs<a href='#'> http://goo.gl/HJMWO8</a>");
   

   
    editor.setEditable(true);
    editor.setBackground(jLabel1.getBackground());
        // JOptionPane.showMessageDialog(this, "<html> Click Here </a><br/>"
          //       + "Add Microsoft Translate Service to your Azure App <a href='https://datamarket.azure.com/dataset/bing/microsofttranslator'> Click Here </a><br/></html>");
    
    JOptionPane.showMessageDialog(this,editor);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void PlatformItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PlatformItemStateChanged
       
        if(Platform.getSelectedItem().toString().equalsIgnoreCase("ios"))
        {   
            ChooseBaseFile.setText("Choose Localizable.strings");
            ChooseBaseFile.setToolTipText("Path to Your iOS Localizable.strings");
            isIOS = true;
        }
        else
        {
            ChooseBaseFile.setText("Choose String.xml");
            ChooseBaseFile.setToolTipText("Path to Your Android String.xml");
            isIOS = false;
        }
        
    }//GEN-LAST:event_PlatformItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            javax.swing.UIManager.setLookAndFeel(new com.sun.java.swing.plaf.windows.WindowsLookAndFeel());
            
        } catch (Exception ex) {
           ex.printStackTrace();
        }
        //</editor-fold>

        //Message Console
        
       
        
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane BaseFilePath;
    private javax.swing.JComboBox BaseLanguage;
    private javax.swing.JButton ChooseBaseFile;
    private javax.swing.JTextPane OuputFolderPath;
    private javax.swing.JComboBox Platform;
    private javax.swing.JTextPane clientID;
    private javax.swing.JTextPane clientSecret;
    private javax.swing.JTextPane clientSecret1;
    private javax.swing.JTextPane clientSecret2;
    private javax.swing.JTextPane clientSecret4;
    private javax.swing.JScrollPane console;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane textConsole;
    // End of variables declaration//GEN-END:variables
}
